{"version":3,"sources":["components/UI/Modal.module.css","components/Game/Pirate.module.css","components/UI/RollButton.module.css","components/UI/Outliner.module.css","assets/Pirate.png","store/game-context.js","components/Game/Pirate.js","components/UI/Modal.js","assets/Map.png","components/Game/Game.js","components/UI/Controls.js","components/UI/RollButton.js","components/UI/Dice.js","components/UI/Outliner.js","services/http.service.js","store/GameProvider.js","App.js","index.js"],"names":["module","exports","GameContext","React","createContext","rolledNumber","pirateLocation","isDiceRolling","isScrollingEnabled","isModalVisible","isRollingEnabled","ModalContent","rollDice","toggleModalVisibility","Pirate","props","useContext","spriteClasses","classes","src","PirateSprite","alt","className","Backdrop","backdrop","onClick","onClose","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","Fragment","ReactDOM","createPortal","Game","container","useRef","gameCtx","onClickHandler","body","onresize","window","innerHeight","innerWidth","useEffect","current","scrollTo","innerRef","vertical","horizontal","style","height","map","Controls","toggleScrolling","element","cursor","icon","color","transform","marginBottom","fontSize","userSelect","RollButton","btnClasses","button","buttonIsHightlighted","bump","disabled","isDisabled","text","Dice","diceType","number","isSpinning","fixedWidth","Outliner","useState","setButtonIsHighlighted","buttonText","displayedDiceNumberAsText","outliner","setTimeout","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","defaultGameState","jokes","then","forEach","joke","push","gameReducer","state","action","type","value","GameProvider","useReducer","gameState","dispatchGameAction","gameContext","interval","setInterval","Math","floor","random","newModalContent","clearInterval","IP","ip","address","length","resetGame","Provider","library","add","faCircle","faHandPaper","faDiceOne","faDiceTwo","faDiceThree","faDiceFour","faDiceFive","faDiceSix","faSquare","App","render"],"mappings":"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","file":"static/js/main.93480965.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__29fHH\",\"modal\":\"Modal_modal__3tsUe\",\"slide-down\":\"Modal_slide-down__eX0Tx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pirate-sprite\":\"Pirate_pirate-sprite__27RI-\",\"animation-1\":\"Pirate_animation-1__2EJ-H\",\"animation1\":\"Pirate_animation1__18nEw\",\"animation-2\":\"Pirate_animation-2__cMHIB\",\"animation2\":\"Pirate_animation2__2lFQ7\",\"animation-3\":\"Pirate_animation-3__2E3JB\",\"animation3\":\"Pirate_animation3__Hv9yJ\",\"animation-4\":\"Pirate_animation-4__1bRH4\",\"animation4\":\"Pirate_animation4__2lbxp\",\"animation-5\":\"Pirate_animation-5__3hvHm\",\"animation5\":\"Pirate_animation5__1M-rb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"RollButton_button__ySEqg\",\"bump\":\"RollButton_bump__y_xoi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outliner\":\"Outliner_outliner__2dY9O\"};","export default __webpack_public_path__ + \"static/media/Pirate.35372aaa.png\";","import React from \"react\";\r\n\r\nconst GameContext = React.createContext({\r\n    rolledNumber: 3,\r\n    pirateLocation: 1,\r\n    isDiceRolling: false,\r\n    isScrollingEnabled:false,\r\n    isModalVisible:false,\r\n    isRollingEnabled:true,\r\n    ModalContent:<p>Hello Modal</p>,\r\n    rollDice: () => {},\r\n    toggleModalVisibility: () => {}\r\n})\r\n\r\nexport default GameContext","import { useContext } from 'react'\r\nimport PirateSprite from '../../assets/Pirate.png'\r\nimport classes from './Pirate.module.css'\r\nimport GameContext from '../../store/game-context'\r\n\r\nconst Pirate = props => {\r\n    const gameCtx = useContext(GameContext)\r\n    const pirateLocation = gameCtx.pirateLocation\r\n    let spriteClasses = classes[\"pirate-sprite\"]\r\n    if (pirateLocation > 1) {\r\n        spriteClasses += (' '+ classes[`animation-${pirateLocation-1}`])\r\n    }\r\n\r\n    return <img src={PirateSprite} alt=\"pirate\"\r\n        className={spriteClasses} />\r\n}\r\n\r\nexport default Pirate","import React from 'react'\r\nimport classes from './Modal.module.css'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst Backdrop = props => {\r\n    return <div className={classes.backdrop} onClick={props.onClose} />\r\n}\r\n\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalElement = document.getElementById('overlays')\r\n\r\nconst Modal = props => {\r\n    return <React.Fragment>\r\n        {ReactDOM.createPortal(<Backdrop onClose={props.onClick} />, portalElement)}\r\n        {ReactDOM.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalElement)}\r\n    </React.Fragment>\r\n}\r\n\r\nexport default Modal","export default __webpack_public_path__ + \"static/media/Map.2951357d.png\";","import { useEffect, useRef, useContext, Fragment } from 'react'\r\nimport Pirate from './Pirate'\r\nimport Modal from '../UI/Modal'\r\nimport map from '../../assets/Map.png'\r\nimport GameContext from '../../store/game-context'\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\n\r\nconst Game = () => {\r\n    const container = useRef(null);\r\n    const gameCtx = useContext(GameContext)\r\n    const isScrollingEnabled = gameCtx.isScrollingEnabled\r\n    const isModalVisible = gameCtx.isModalVisible\r\n    const ModalContent = gameCtx.ModalContent\r\n    const onClickHandler = gameCtx.toggleModalVisibility\r\n\r\n    document.body.onresize = () => {\r\n        if (window.innerHeight>window.innerWidth) {\r\n            gameCtx.toggleModalVisibility()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (container.current) {\r\n            container.current.scrollTo(0, 0);\r\n        }\r\n    }, []);\r\n\r\n    return <Fragment>\r\n        {isModalVisible && <Modal onClick={onClickHandler}>{ModalContent}</Modal>}\r\n        <ScrollContainer innerRef={container}\r\n            vertical={isScrollingEnabled}\r\n            horizontal={isScrollingEnabled}\r\n            style={{ height: \"100vh\" }}>\r\n            <div style={{ height: \"100%\" }}>\r\n                <img src={map} alt=\"map\" />\r\n                <Pirate />\r\n            </div>\r\n        </ScrollContainer>\r\n    </Fragment>\r\n}\r\n\r\nexport default Game","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useContext } from 'react'\r\nimport GameContext from '../../store/game-context'\r\n\r\nconst Controls = () => {\r\n  const gameCtx = useContext(GameContext)\r\n  const isScrollingEnabled = gameCtx.isScrollingEnabled\r\n  const onClickHandler = gameCtx.toggleScrolling\r\n\r\n  const element = <span className=\"fa-layers fa-fw fa-5x\" onClick={onClickHandler} style={{cursor:\"pointer\"}}>\r\n    <FontAwesomeIcon icon={['fas', 'circle']} color={isScrollingEnabled ? 'lightgreen' : 'white'} />\r\n    <FontAwesomeIcon icon={['far', 'hand-paper']} transform=\"shrink-7\" />\r\n  </span>\r\n\r\n  return <div style={{ marginBottom: \"20vh\" }}>{element} <br />\r\n    <span style={{ fontSize: \"x-large\", userSelect: \"none\" }}>Browse map</span>\r\n  </div>\r\n}\r\n\r\nexport default Controls","import classes from './RollButton.module.css'\r\n\r\nconst RollButton = props => {\r\n    const btnClasses = `${classes.button} ${props.buttonIsHightlighted ? classes.bump : ''}`\r\n\r\n    return <button className={btnClasses} onClick={props.onClick} disabled={props.isDisabled}>\r\n        <span>{props.text}</span>\r\n    </button>\r\n}\r\n\r\nexport default RollButton","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Dice = props => {\r\n    const diceType = 'dice-'+props.number\r\n    const classes = \"fa-layers fa-fw fa-10x \" + (props.isSpinning ? 'fa-spin' : '')\r\n\r\n    return <div style={{fontSize:\"1.5vw\"}}><span className={classes}>\r\n        <FontAwesomeIcon icon={['fas', 'square']} color=\"black\" transform=\"shrink-7\" fixedWidth/>\r\n        <FontAwesomeIcon icon={['fas', diceType]} color=\"rgb(214, 205, 205)\" fixedWidth/>\r\n        </span></div>\r\n}\r\n\r\nexport default Dice","import { useContext, useState } from 'react'\r\nimport classes from './Outliner.module.css'\r\nimport Controls from './Controls'\r\nimport RollButton from './RollButton'\r\nimport Dice from './Dice'\r\nimport GameContext from '../../store/game-context'\r\n\r\nconst Outliner = () => {\r\n    const gameCtx = useContext(GameContext)\r\n\r\n    const numbers = ['one', 'two', 'three', 'four', 'five', 'six']\r\n    const [buttonIsHightlighted, setButtonIsHighlighted] = useState(false)\r\n    const isDiceRolling = gameCtx.isDiceRolling\r\n    const displayedDiceNumber = gameCtx.rolledNumber\r\n    const buttonText = isDiceRolling ? 'Rolling...' : 'Roll Dice'\r\n    const displayedDiceNumberAsText = numbers[displayedDiceNumber - 1]\r\n    const isRollingEnabled = gameCtx.isRollingEnabled\r\n\r\n    const onRollHandler = () => {\r\n        setButtonIsHighlighted(true)\r\n        gameCtx.rollDice()\r\n        setTimeout(() => {\r\n            setButtonIsHighlighted(false)\r\n        }, 300);\r\n    }\r\n\r\n    return <div className={classes.outliner}>\r\n        <Controls />\r\n        <RollButton onClick={onRollHandler}\r\n            text={buttonText}\r\n            buttonIsHightlighted={buttonIsHightlighted}\r\n            isDisabled={!isRollingEnabled} />\r\n        <Dice number={displayedDiceNumberAsText} isSpinning={isDiceRolling} />\r\n    </div>\r\n}\r\n\r\nexport default Outliner","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        // if (err.response && err.response.status === 401) {\r\n        //     // Depends on routing startegy - hash or history\r\n        //     // window.location.assign('/#/login')\r\n        //     // window.location.assign('/login')\r\n        //     router.push('/login')\r\n        // }\r\n        throw err\r\n    }\r\n}","import GameContext from \"./game-context\"\r\nimport { useReducer } from \"react\"\r\nimport { httpService } from \"../services/http.service\"\r\nimport ip from 'ip'\r\n\r\nconst defaultGameState = {\r\n    rolledNumber: 3,\r\n    pirateLocation: 1,\r\n    isDiceRolling: false,\r\n    isScrollingEnabled: false,\r\n    isModalVisible: false,\r\n    isRollingEnabled: true,\r\n    ModalContent: <p>Hello Modal</p>\r\n}\r\n\r\nconst jokes = []\r\n\r\nhttpService.get('joke').then((res) => {\r\n    res.forEach(joke => {\r\n        jokes.push(joke.content)\r\n    });\r\n    console.log(jokes)\r\n})\r\n\r\nconst gameReducer = (state, action) => {\r\n\r\n    if (action.type === 'TOGGLE_MODAL_VISIBILITY') {\r\n        if (window.innerHeight > window.innerWidth) {\r\n            return { ...state, isModalVisible: true, ModalContent: <p>This app in not supported in portrait mode. Please switch your device's display mode to landscape.</p> }\r\n        }\r\n        return { ...state, isModalVisible: !state.isModalVisible }\r\n    }\r\n\r\n    if (action.type === 'SET_MODAL_CONTENT') {\r\n        return { ...state, ModalContent: action.element }\r\n    }\r\n\r\n    if (action.type === 'TOGGLE_SCROLLING') {\r\n        return { ...state, isScrollingEnabled: !state.isScrollingEnabled }\r\n    }\r\n\r\n    if (action.type === 'TOGGLE_ROLLING_ENABLED') {\r\n        return { ...state, isRollingEnabled: !state.isRollingEnabled }\r\n    }\r\n\r\n    if (action.type === 'TOGGLE_DICE_STATE') {\r\n        return { ...state, isDiceRolling: !state.isDiceRolling }\r\n    }\r\n\r\n    if (action.type === 'SET_DICE_VALUE') {\r\n        return { ...state, rolledNumber: action.value }\r\n    }\r\n\r\n    if (action.type === 'SET_PIRATE_LOCATION') {\r\n        return { ...state, pirateLocation: action.value }\r\n    }\r\n\r\n    if (action.type === 'RESET_GAME') {\r\n        return defaultGameState\r\n    }\r\n\r\n    return defaultGameState\r\n}\r\n\r\nconst GameProvider = props => {\r\n    const [gameState, dispatchGameAction] = useReducer(gameReducer, defaultGameState)\r\n\r\n    const rollDiceHandler = () => {\r\n        dispatchGameAction({ type: 'TOGGLE_DICE_STATE' })\r\n        dispatchGameAction({ type: 'TOGGLE_ROLLING_ENABLED' })\r\n        let value\r\n        let interval = setInterval(() => {\r\n            value = Math.floor(Math.random() * 6 + 1)\r\n            dispatchGameAction({ type: 'SET_DICE_VALUE', value })\r\n        }, 50);\r\n        setTimeout(() => {\r\n            clearInterval(interval)\r\n            dispatchGameAction({ type: 'TOGGLE_DICE_STATE' })\r\n            dispatchGameAction({ type: 'SET_PIRATE_LOCATION', value })\r\n            httpService.post('log', { IP: ip.address(), action: `Player rolled ${value}` })\r\n            let newModalContent\r\n            switch (value) {\r\n                case 1:\r\n                    newModalContent = <p>You didn't get off the island. Game Over :(</p>\r\n                    httpService.post('log', { IP: ip.address(), action: `Player didn't get off the island` })\r\n                    httpService.post('log', { IP: ip.address(), action: `Game Over` })\r\n                    break;\r\n                case 2:\r\n                    const rumRoll = Math.floor(Math.random() * (2))\r\n                    if (rumRoll) {\r\n                        newModalContent = <p>You found a barrel of rum. It tastes great. You feel like a true pirate! You win! :)</p>\r\n                        httpService.post('log', { IP: ip.address(), action: `Player got good rum` })\r\n                        httpService.post('log', { IP: ip.address(), action: `Player won` })\r\n                    }\r\n                    else {\r\n                        newModalContent = <p>You found a barrel of rum. It tastes sour. You feel sick! Game Over :(</p>\r\n                        httpService.post('log', { IP: ip.address(), action: `Player got spoiled rum` })\r\n                        httpService.post('log', { IP: ip.address(), action: `Game Over` })\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    newModalContent = <p>You got eaten by the Kraken. Game Over :(</p>\r\n                    httpService.post('log', { IP: ip.address(), action: `Player got eaten by kraken` })\r\n                    httpService.post('log', { IP: ip.address(), action: `Game Over` })\r\n                    break;\r\n                case 4:\r\n                    newModalContent = <p>You found the buried treasure! You win! :)</p>\r\n                    httpService.post('log', { IP: ip.address(), action: `Player got the treasure` })\r\n                    httpService.post('log', { IP: ip.address(), action: `Player won` })\r\n                    break;\r\n                case 5:\r\n                    const joke = jokes[Math.floor(Math.random() * (jokes.length + 1))]\r\n                    newModalContent = <p>You found a message in a bottle. It says:<br /> <br /> <span>{joke}</span></p>\r\n                    httpService.post('log', { IP: ip.address(), action: `Player got joke:${joke}` })\r\n                    break;\r\n                case 6:\r\n                    newModalContent = <p>You crossed the archipelago and managed to get rescued. You win! :)</p>\r\n                    httpService.post('log', { IP: ip.address(), action: `Player got to the end` })\r\n                    httpService.post('log', { IP: ip.address(), action: `Player won` })\r\n                    break;\r\n                default:\r\n                    break\r\n            }\r\n            dispatchGameAction({ type: 'SET_MODAL_CONTENT', element: newModalContent })\r\n            setTimeout(() => {\r\n                dispatchGameAction({ type: 'TOGGLE_MODAL_VISIBILITY' })\r\n                dispatchGameAction({ type: 'TOGGLE_ROLLING_ENABLED' })\r\n\r\n            }, 1000 * (value - 1))\r\n        }, 1000);\r\n    }\r\n\r\n    const toggleScrollingHandler = () => {\r\n        dispatchGameAction({ type: 'TOGGLE_SCROLLING' })\r\n    }\r\n\r\n    const resetGameHandler = () => {\r\n        dispatchGameAction({ type: 'RESET_GAME' })\r\n    }\r\n\r\n    const toggleModalVisibilityHandler = () => {\r\n        dispatchGameAction({ type: 'TOGGLE_MODAL_VISIBILITY' })\r\n    }\r\n\r\n    const gameContext = {\r\n        rolledNumber: gameState.rolledNumber,\r\n        pirateLocation: gameState.pirateLocation,\r\n        isDiceRolling: gameState.isDiceRolling,\r\n        isScrollingEnabled: gameState.isScrollingEnabled,\r\n        isRollingEnabled: gameState.isRollingEnabled,\r\n        isModalVisible: gameState.isModalVisible,\r\n        ModalContent: gameState.ModalContent,\r\n        rollDice: rollDiceHandler,\r\n        toggleScrolling: toggleScrollingHandler,\r\n        resetGame: resetGameHandler,\r\n        toggleModalVisibility: toggleModalVisibilityHandler\r\n    }\r\n\r\n    return <GameContext.Provider value={gameContext}>\r\n        {props.children}\r\n    </GameContext.Provider>\r\n}\r\n\r\nexport default GameProvider","import React from \"react\";\n\nimport Game from \"./components/Game/Game\";\nimport Outliner from \"./components/UI/Outliner\";\n\nimport GameProvider from \"./store/GameProvider\"\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCircle, faDiceOne, faDiceTwo, faDiceThree, faDiceFour, faDiceFive, faDiceSix, faSquare } from '@fortawesome/free-solid-svg-icons'\nimport { faHandPaper } from '@fortawesome/free-regular-svg-icons'\n\nlibrary.add(faCircle, faHandPaper, faDiceOne, faDiceTwo, faDiceThree, faDiceFour, faDiceFive, faDiceSix, faSquare)\n\nfunction App() {\n  return (\n    <GameProvider>\n      <Game />\n      <Outliner />\n    </GameProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}